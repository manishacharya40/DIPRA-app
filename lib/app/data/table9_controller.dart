import 'package:get/get.dart';

class Table9Controller extends GetxController {
  final Map<double, double> bendingStressMap = {
    3.25: 310,
    3.29: 308,
    3.33: 306,
    3.37: 304,
    3.41: 302,
    3.45: 300,
    3.49: 298,
    3.54: 296,
    3.58: 294,
    3.63: 292,
    3.67: 290,
    3.72: 288,
    3.76: 286,
    3.81: 284,
    3.86: 282,
    3.91: 280,
    3.96: 278,
    4.01: 276,
    4.06: 274,
    4.11: 272,
    4.17: 270,
    4.22: 268,
    4.28: 266,
    4.33: 264,
    4.39: 262,
    4.45: 260,
    4.51: 258,
    4.57: 256,
    4.63: 254,
    4.69: 252,
    4.76: 250,
    4.82: 248,
    4.89: 246,
    4.96: 244,
    5.03: 242,
    5.1: 240,
    5.17: 238,
    5.24: 236,
    5.31: 234,
    5.39: 232,
    5.47: 230,
    5.54: 228,
    5.62: 226,
    5.7: 224,
    5.79: 222,
    5.87: 220,
    5.96: 218,
    6.04: 216,
    6.13: 214,
    6.22: 212,
    6.32: 210,
    6.41: 208,
    6.51: 206,
    6.6: 204,
    6.7: 202,
    6.8: 200,
    6.91: 198,
    7.01: 196,
    7.12: 194,
    7.22: 192,
    7.33: 190,
    7.45: 188,
    7.56: 186,
    7.68: 184,
    7.8: 182,
    7.92: 180,
    8.04: 178,
    8.16: 176,
    8.29: 174,
    8.42: 172,
    8.55: 170,
    8.62: 169,
    8.69: 168,
    8.75: 167,
    8.82: 166,
    8.89: 165,
    8.96: 164,
    9.03: 163,
    9.1: 162,
    9.17: 161,
    9.25: 160,
    9.32: 159,
    9.39: 158,
    9.47: 157,
    9.54: 156,
    9.62: 155,
    9.69: 154,
    9.77: 153,
    9.85: 152,
    9.92: 151,
    10.0: 150,
    10.08: 149,
    10.16: 148,
    10.24: 147,
    10.33: 146,
    10.41: 145,
    10.49: 144,
    10.58: 143,
    10.66: 142,
    10.75: 141,
    10.83: 140,
    10.92: 139,
    11.01: 138,
    11.1: 137,
    11.19: 136,
    11.28: 135,
    11.37: 134,
    11.46: 133,
    11.56: 132,
    11.65: 131,
    11.75: 130,
    11.84: 129,
    11.94: 128,
    12.04: 127,
    12.14: 126,
    12.25: 125,
    12.35: 124,
    12.45: 123,
    12.56: 122,
    12.67: 121,
    12.78: 120,
    12.89: 119,
    13.0: 118,
    13.11: 117,
    13.23: 116,
    13.34: 115,
    13.46: 114,
    13.58: 113,
    13.71: 112,
    13.83: 111,
    13.96: 110,
    14.09: 109,
    14.22: 108,
    14.36: 107,
    14.5: 106,
    14.64: 105,
    14.78: 104,
    14.93: 103,
    15.08: 102,
    15.23: 101,
    15.39: 100,
    15.55: 99,
    15.71: 98,
    15.88: 97,
    16.06: 96,
    16.23: 95,
    16.42: 94,
    16.61: 93,
    16.8: 92,
    17.0: 91,
    17.21: 90,
    17.42: 89,
    17.64: 88,
    17.86: 87,
    18.1: 86,
    18.34: 85,
    18.59: 84,
    18.85: 83,
    19.12: 82,
    19.4: 81,
    19.68: 80,
    19.99: 79,
    20.3: 78,
    20.62: 77,
    20.96: 76,
    21.31: 75,
    21.68: 74,
    22.07: 73,
    22.47: 72,
    22.88: 71,
    23.32: 70,
    23.78: 69,
    24.26: 68,
    24.76: 67,
    25.29: 66,
    25.85: 65,
    26.43: 64,
    27.04: 63,
    27.68: 62,
    28.36: 61,
    29.08: 60,
    29.83: 59,
    30.63: 58,
    31.47: 57,
    32.36: 56,
    33.31: 55,
    34.3: 54,
    35.37: 53,
    36.49: 52,
    37.69: 51,
    38.97: 50,
    40.33: 49,
    41.78: 48,
    43.33: 47,
    44.98: 46,
    46.76: 45,
    48.66: 44,
    50.71: 43,
    52.91: 42,
    55.28: 41,
    57.84: 40,
    60.61: 39,
    63.61: 38,
    66.86: 37,
    70.4: 36,
    74.27: 35,
    78.49: 34,
    83.11: 33,
    88.19: 32,
    93.79: 31,
  };

  final Map<double, double> deflectionMap = {
    7.26: 310,
    7.27: 308, // Note: Duplicate key, will use the last value (304)
    7.27: 306,
    7.27: 304,
    7.28: 302,
    7.28: 300,
    7.28: 298,
    7.29: 296,
    7.29: 294,
    7.3: 292,
    7.3: 290,
    7.3: 288,
    7.31: 286,
    7.31: 284,
    7.32: 282,
    7.32: 280,
    7.33: 278,
    7.33: 276,
    7.34: 274,
    7.34: 272,
    7.35: 270,
    7.35: 268,
    7.36: 266,
    7.36: 264,
    7.37: 262,
    7.38: 260,
    7.38: 258,
    7.39: 256,
    7.39: 254,
    7.4: 252,
    7.41: 250,
    7.42: 248,
    7.42: 246,
    7.43: 244,
    7.44: 242,
    7.45: 240,
    7.46: 238,
    7.47: 236,
    7.48: 234,
    7.48: 232,
    7.49: 230,
    7.51: 228,
    7.52: 226,
    7.53: 224,
    7.54: 222,
    7.55: 220,
    7.56: 218,
    7.58: 216,
    7.59: 214,
    7.6: 212,
    7.62: 210,
    7.63: 208,
    7.65: 206,
    7.66: 204,
    7.68: 202,
    7.7: 200,
    7.72: 198,
    7.74: 196,
    7.76: 194,
    7.78: 192,
    7.8: 190,
    7.82: 188,
    7.84: 186,
    7.87: 184,
    7.89: 182,
    7.92: 180,
    7.95: 178,
    7.98: 176,
    8.01: 174,
    8.04: 172,
    8.07: 170,
    8.09: 169,
    8.11: 168,
    8.13: 167,
    8.14: 166,
    8.16: 165,
    8.18: 164,
    8.2: 163,
    8.22: 162,
    8.24: 161,
    8.27: 160,
    8.29: 159,
    8.31: 158,
    8.33: 157,
    8.36: 156,
    8.38: 155,
    8.41: 154,
    8.43: 153,
    8.46: 152,
    8.49: 151,
    8.52: 150,
    8.54: 149,
    8.57: 148,
    8.6: 147,
    8.64: 146,
    8.67: 145,
    8.7: 144,
    8.73: 143,
    8.77: 142,
    8.81: 141,
    8.84: 140,
    8.88: 139,
    8.92: 138,
    8.96: 137,
    9.0: 136,
    9.04: 135,
    9.09: 134,
    9.13: 133,
    9.18: 132,
    9.23: 131,
    9.28: 130,
    9.33: 129,
    9.38: 128,
    9.44: 127,
    9.49: 126,
    9.55: 125,
    9.61: 124,
    9.67: 123,
    9.74: 122,
    9.8: 121,
    9.87: 120,
    9.94: 119,
    10.02: 118,
    10.09: 117,
    10.17: 116,
    10.25: 115,
    10.34: 114,
    10.42: 113,
    10.51: 112,
    10.61: 111,
    10.71: 110,
    10.81: 109,
    10.91: 108,
    11.02: 107,
    11.13: 106,
    11.25: 105,
    11.37: 104,
    11.5: 103,
    11.63: 102,
    11.77: 101,
    11.91: 100,
    12.06: 99,
    12.21: 98,
    12.37: 97,
    12.54: 96,
    12.72: 95,
    12.9: 94,
    13.09: 93,
    13.29: 92,
    13.5: 91,
    13.72: 90,
    13.95: 89,
    14.18: 88,
    14.43: 87,
    14.7: 86,
    14.97: 85,
    15.26: 84,
    15.56: 83,
    15.88: 82,
    16.21: 81,
    16.56: 80,
    16.93: 79,
    17.31: 78,
    17.72: 77,
    18.15: 76,
    18.61: 75,
    19.09: 74,
    19.59: 73,
    20.13: 72,
    20.69: 71,
    21.29: 70,
    21.93: 69,
    22.6: 68,
    23.32: 67,
    24.08: 66,
    24.88: 65,
    25.74: 64,
    26.66: 63,
    27.64: 62,
    28.68: 61,
    29.8: 60,
    30.99: 59,
    32.27: 58,
    33.64: 57,
    35.12: 56,
    36.7: 55,
    38.41: 54,
    40.25: 53,
    42.24: 52,
    44.39: 51,
    46.72: 50,
    49.25: 49,
    51.99: 48,
    54.98: 47,
    58.25: 46,
    61.81: 45,
    65.72: 44,
    70.01: 43,
    74.72: 42,
    79.92: 41,
    85.67: 40,
    92.04: 39,
    99.11: 38,
    106.99: 37,
    115.8: 36,
    125.67: 35,
    136.78: 34,
    149.32: 33,
    163.54: 32,
    179.71: 31,
  };

  double? getDt(String keyType, double keyValue) {
    Map<double, double> dataMap =
        keyType == "bending stress" ? bendingStressMap : deflectionMap;

    if (dataMap.containsKey(keyValue)) {
      return dataMap[keyValue];
    } else {
      // Find the closest keys
      List<double> sortedKeys = dataMap.keys.toList()..sort();
      double lowerKey = sortedKeys.lastWhere(
        (k) => k < keyValue,
        orElse: () => sortedKeys.first,
      );
      double upperKey = sortedKeys.firstWhere(
        (k) => k > keyValue,
        orElse: () => sortedKeys.last,
      );

      // Check if the value is midway
      if ((keyValue - lowerKey) == (upperKey - keyValue)) {
        // Interpolate
        double lowerValue = dataMap[lowerKey]!;
        double upperValue = dataMap[upperKey]!;
        return (lowerValue + upperValue) / 2;
      } else if ((keyValue - lowerKey) < (upperKey - keyValue)) {
        // Closer to lower key
        return dataMap[lowerKey];
      } else {
        // Closer to upper key
        return dataMap[upperKey];
      }
    }
  }
}
