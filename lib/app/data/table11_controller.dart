import 'package:get/get.dart';

class Table11Controller extends GetxController {
  final Map<double, double> bendingStressMap = {
    3.06: 660,
    3.1: 655,
    3.15: 650,
    3.2: 645,
    3.25: 640,
    3.3: 635,
    3.35: 630,
    3.4: 625,
    3.46: 620,
    3.51: 615,
    3.57: 610,
    3.63: 605,
    3.68: 600,
    3.75: 595,
    3.81: 590,
    3.87: 585,
    3.94: 580,
    4.0: 575,
    4.07: 570,
    4.14: 565,
    4.21: 560,
    4.29: 555,
    4.36: 550,
    4.44: 545,
    4.52: 540,
    4.6: 535,
    4.69: 530,
    4.77: 525,
    4.86: 520,
    4.95: 515,
    5.05: 510,
    5.14: 505,
    5.24: 500,
    5.35: 495,
    5.45: 490,
    5.56: 485,
    5.67: 480,
    5.78: 475,
    5.9: 470,
    6.02: 465,
    6.15: 460,
    6.28: 455,
    6.41: 450,
    6.54: 445,
    6.68: 440,
    6.83: 435,
    6.98: 430,
    7.13: 425,
    7.29: 420,
    7.46: 415,
    7.63: 410,
    7.8: 405,
    7.98: 400,
    8.17: 395,
    8.36: 390,
    8.56: 385,
    8.77: 380,
    8.98: 375,
    9.2: 370,
    9.43: 365,
    9.66: 360,
    9.91: 355,
    10.16: 350,
    10.42: 345,
    10.69: 340,
    10.97: 335,
    11.26: 330,
    11.56: 325,
    11.87: 320,
    12.19: 315,
    12.52: 310,
    12.66: 308,
    12.8: 306,
    12.94: 304,
    13.08: 302,
    13.23: 300,
    13.37: 298,
    13.52: 296,
    13.67: 294,
    13.83: 292,
    13.98: 290,
    14.14: 288,
    14.3: 286,
    14.46: 284,
    14.62: 282,
    14.79: 280,
    14.96: 278,
    15.13: 276,
    15.3: 274,
    15.48: 272,
    15.65: 270,
    15.83: 268,
    16.02: 266,
    16.2: 264,
    16.39: 262,
    16.58: 260,
    16.77: 258,
    16.97: 256,
    17.16: 254,
    17.36: 252,
    17.57: 250,
    17.77: 248,
    17.98: 246,
    18.19: 244,
    18.4: 242,
    18.62: 240,
    18.84: 238,
    19.06: 236,
    19.28: 234,
    19.51: 232,
    19.73: 230,
    19.97: 228,
    20.2: 226,
    20.43: 224,
    20.67: 222,
    20.91: 220,
    21.16: 218,
    21.4: 216,
    21.65: 214,
    21.9: 212,
    22.15: 210,
    22.4: 208,
    22.66: 206,
    22.92: 204,
    23.18: 202,
    23.44: 200,
    23.7: 198,
    23.97: 196,
    24.24: 194,
    24.5: 192,
    24.77: 190,
    25.04: 188,
    25.31: 186,
    25.59: 184,
    25.86: 182,
    26.13: 180,
    26.41: 178,
    26.68: 176,
    26.96: 174,
    27.23: 172,
    27.51: 170,
    27.65: 169,
    27.78: 168,
    27.92: 167,
    28.06: 166,
    28.19: 165,
    28.33: 164,
    28.47: 163,
    28.6: 162,
    28.74: 161,
    28.87: 160,
    29.01: 159,
    29.15: 158,
    29.28: 157,
    29.41: 156,
    29.55: 155,
    29.68: 154,
    29.82: 153,
    29.95: 152,
    30.08: 151,
    30.21: 150,
    30.34: 149,
    30.48: 148,
    30.61: 147,
    30.74: 146,
    30.87: 145,
    30.99: 144,
    31.12: 143,
    31.25: 142,
    31.38: 141,
    31.5: 140,
    31.63: 139,
    31.76: 138,
    31.88: 137,
    32.01: 136,
    32.13: 135,
    32.25: 134,
    32.38: 133,
    32.5: 132,
    32.62: 131,
    32.75: 130,
    32.87: 129,
    32.99: 128,
    33.11: 127,
    33.23: 126,
    33.35: 125,
    33.47: 124,
    33.59: 123,
    33.71: 122,
    33.83: 121,
    33.95: 120,
    34.07: 119,
    34.19: 118,
    34.31: 117,
    34.43: 116,
    34.55: 115,
    34.68: 114,
    34.8: 113,
    34.92: 112,
    35.05: 111,
    35.17: 110,
    35.3: 109,
    35.43: 108,
    35.56: 107,
    35.69: 106,
    35.83: 105,
    35.96: 104,
    36.1: 103,
    36.25: 102,
    36.39: 101,
    36.54: 100,
    36.69: 99,
    36.85: 98,
    37.01: 97,
    37.17: 96,
    37.34: 95,
    37.52: 94,
    37.7: 93,
    37.89: 92,
    38.08: 91,
    38.28: 90,
    38.49: 89,
    38.71: 88,
    38.93: 87,
    39.17: 86,
    39.41: 85,
    39.67: 84,
    39.94: 83,
    40.22: 82,
    40.51: 81,
    40.82: 80,
    41.14: 79,
    41.48: 78,
    41.84: 77,
    42.21: 76,
    42.6: 75,
    43.02: 74,
    43.45: 73,
    43.92: 72,
    44.4: 71,
    44.91: 70,
    45.46: 69,
    46.03: 68,
    46.64: 67,
    47.28: 66,
    47.96: 65,
    48.68: 64,
    49.44: 63,
    50.25: 62,
    51.11: 61,
    52.02: 60,
    52.99: 59,
    54.02: 58,
    55.12: 57,
    56.28: 56,
    57.53: 55,
    58.86: 54,
    60.28: 53,
    61.79: 52,
    63.41: 51,
    65.14: 50,
    67.0: 49,
    68.99: 48,
    71.12: 47,
    73.41: 46,
    75.88: 45,
    78.54: 44,
    81.4: 43,
    84.5: 42,
    87.85: 41,
    91.47: 40,
    95.4: 39,
    99.67: 38,
    104.32: 37,
    109.4: 36,
    114.94: 35,
    121.02: 34,
    127.69: 33,
    135.03: 32,
    143.14: 31,
  };

  final Map<double, double> deflectionMap = {
    15.09: 660,
    15.09: 655, // Note: Duplicate key, will use last value (620)
    15.09: 650,
    15.09: 645,
    15.09: 640,
    15.09: 635,
    15.09: 630,
    15.09: 625,
    15.09: 620,
    15.09: 615,
    15.1: 610,
    15.1: 605,
    15.1: 600,
    15.1: 595,
    15.1: 590,
    15.1: 585,
    15.1: 580,
    15.1: 575,
    15.1: 570,
    15.1: 565,
    15.1: 560,
    15.1: 555,
    15.1: 550,
    15.11: 545,
    15.11: 540,
    15.11: 535,
    15.11: 530,
    15.11: 525,
    15.11: 520,
    15.11: 515,
    15.11: 510,
    15.11: 505,
    15.12: 500,
    15.12: 495,
    15.12: 490,
    15.12: 485,
    15.12: 480,
    15.12: 475,
    15.13: 470,
    15.13: 465,
    15.13: 460,
    15.13: 455,
    15.13: 450,
    15.14: 445,
    15.14: 440,
    15.14: 435,
    15.14: 430,
    15.14: 425,
    15.15: 420,
    15.15: 415,
    15.15: 410,
    15.16: 405,
    15.16: 400,
    15.16: 395,
    15.17: 390,
    15.17: 385,
    15.17: 380,
    15.18: 375,
    15.18: 370,
    15.19: 365,
    15.19: 360,
    15.2: 355,
    15.2: 350,
    15.21: 345,
    15.22: 340,
    15.22: 335,
    15.23: 330,
    15.24: 325,
    15.24: 320,
    15.25: 315,
    15.26: 310,
    15.27: 308,
    15.27: 306,
    15.27: 304,
    15.28: 302,
    15.28: 300,
    15.29: 298,
    15.29: 296,
    15.3: 294,
    15.3: 292,
    15.3: 290,
    15.31: 288,
    15.31: 286,
    15.32: 284,
    15.33: 282,
    15.33: 280,
    15.34: 278,
    15.34: 276,
    15.35: 274,
    15.35: 272,
    15.36: 270,
    15.37: 268,
    15.37: 266,
    15.38: 264,
    15.39: 262,
    15.4: 260,
    15.4: 258,
    15.41: 256,
    15.42: 254,
    15.43: 252,
    15.44: 250,
    15.45: 248,
    15.45: 246,
    15.46: 244,
    15.47: 242,
    15.48: 240,
    15.49: 238,
    15.51: 236,
    15.52: 234,
    15.53: 232,
    15.54: 230,
    15.55: 228,
    15.57: 226,
    15.58: 224,
    15.59: 222,
    15.61: 220,
    15.62: 218,
    15.64: 216,
    15.65: 214,
    15.67: 212,
    15.69: 210,
    15.71: 208,
    15.73: 206,
    15.75: 204,
    15.77: 202,
    15.79: 200,
    15.81: 198,
    15.83: 196,
    15.86: 194,
    15.88: 192,
    15.91: 190,
    15.93: 188,
    15.96: 186,
    15.99: 184,
    16.02: 182,
    16.06: 180,
    16.09: 178,
    16.12: 176,
    16.16: 174,
    16.2: 172,
    16.24: 170,
    16.26: 169,
    16.28: 168,
    16.31: 167,
    16.33: 166,
    16.35: 165,
    16.37: 164,
    16.4: 163,
    16.42: 162,
    16.45: 161,
    16.48: 160,
    16.5: 159,
    16.53: 158,
    16.56: 157,
    16.59: 156,
    16.62: 155,
    16.65: 154,
    16.68: 153,
    16.71: 152,
    16.74: 151,
    16.78: 150,
    16.81: 149,
    16.85: 148,
    16.89: 147,
    16.92: 146,
    16.96: 145,
    17.0: 144,
    17.04: 143,
    17.09: 142,
    17.13: 141,
    17.17: 140,
    17.22: 139,
    17.27: 138,
    17.32: 137,
    17.37: 136,
    17.42: 135,
    17.47: 134,
    17.53: 133,
    17.58: 132,
    17.64: 131,
    17.7: 130,
    17.76: 129,
    17.83: 128,
    17.89: 127,
    17.96: 126,
    18.03: 125,
    18.11: 124,
    18.18: 123,
    18.26: 122,
    18.34: 121,
    18.42: 120,
    18.51: 119,
    18.6: 118,
    18.69: 117,
    18.78: 116,
    18.88: 115,
    18.98: 114,
    19.09: 113,
    19.2: 112,
    19.31: 111,
    19.43: 110,
    19.55: 109,
    19.68: 108,
    19.81: 107,
    19.95: 106,
    20.09: 105,
    20.24: 104,
    20.39: 103,
    20.55: 102,
    20.72: 101,
    20.89: 100,
    21.07: 99,
    21.26: 98,
    21.45: 97,
    21.66: 96,
    21.87: 95,
    22.09: 94,
    22.32: 93,
    22.56: 92,
    22.82: 91,
    23.08: 90,
    23.36: 89,
    23.65: 88,
    23.95: 87,
    24.27: 86,
    24.6: 85,
    24.95: 84,
    25.31: 83,
    25.7: 82,
    26.1: 81,
    26.52: 80,
    26.97: 79,
    27.44: 78,
    27.93: 77,
    28.46: 76,
    29.01: 75,
    29.59: 74,
    30.2: 73,
    30.85: 72,
    31.53: 71,
    32.26: 70,
    33.03: 69,
    33.85: 68,
    34.71: 67,
    35.63: 66,
    36.61: 65,
    37.65: 64,
    38.77: 63,
    39.95: 62,
    41.21: 61,
    42.57: 60,
    44.01: 59,
    45.56: 58,
    47.23: 57,
    49.01: 56,
    50.93: 55,
    53.0: 54,
    55.23: 53,
    57.64: 52,
    60.25: 51,
    63.07: 50,
    66.13: 49,
    69.46: 48,
    73.09: 47,
    77.04: 46,
    81.36: 45,
    86.1: 44,
    91.29: 43,
    97.01: 42,
    103.31: 41,
    110.27: 40,
    117.98: 39,
    126.56: 38,
    136.11: 37,
    146.78: 36,
    158.75: 35,
    172.21: 34,
    187.41: 33,
    204.63: 32,
    224.22: 31,
  };

  double? getDt(String keyType, double keyValue) {
    Map<double, double> dataMap =
        keyType == "bending stress" ? bendingStressMap : deflectionMap;

    if (dataMap.containsKey(keyValue)) {
      return dataMap[keyValue];
    } else {
      // Find the closest keys
      List<double> sortedKeys = dataMap.keys.toList()..sort();
      double lowerKey = sortedKeys.lastWhere(
        (k) => k < keyValue,
        orElse: () => sortedKeys.first,
      );
      double upperKey = sortedKeys.firstWhere(
        (k) => k > keyValue,
        orElse: () => sortedKeys.last,
      );

      // Check if the value is midway
      if ((keyValue - lowerKey) == (upperKey - keyValue)) {
        // Interpolate
        double lowerValue = dataMap[lowerKey]!;
        double upperValue = dataMap[upperKey]!;
        return (lowerValue + upperValue) / 2;
      } else if ((keyValue - lowerKey) < (upperKey - keyValue)) {
        // Closer to lower key
        return dataMap[lowerKey];
      } else {
        // Closer to upper key
        return dataMap[upperKey];
      }
    }
  }
}
