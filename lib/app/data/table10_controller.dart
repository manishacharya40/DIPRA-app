import 'package:get/get.dart';

class Table10Controller extends GetxController {
  final Map<double, double> bendingStressMap = {
    5.93: 310,
    6.0: 308,
    6.07: 306,
    6.14: 304,
    6.21: 302,
    6.29: 300,
    6.36: 298,
    6.43: 296,
    6.51: 294,
    6.59: 292,
    6.67: 290,
    6.74: 288,
    6.83: 286,
    6.91: 284,
    6.99: 282,
    7.08: 280,
    7.16: 278,
    7.25: 276,
    7.34: 274,
    7.43: 272,
    7.52: 270,
    7.61: 268,
    7.71: 266,
    7.8: 264,
    7.9: 262,
    8.0: 260,
    8.1: 258,
    8.2: 256,
    8.31: 254,
    8.41: 252,
    8.52: 250,
    8.63: 248,
    8.74: 246,
    8.85: 244,
    8.97: 242,
    9.08: 240,
    9.2: 238,
    9.32: 236,
    9.44: 234,
    9.57: 232,
    9.69: 230,
    9.82: 228,
    9.95: 226,
    10.08: 224,
    10.21: 222,
    10.35: 220,
    10.49: 218,
    10.62: 216,
    10.77: 214,
    10.91: 212,
    11.05: 210,
    11.2: 208,
    11.35: 206,
    11.5: 204,
    11.66: 202,
    11.81: 200,
    11.97: 198,
    12.13: 196,
    12.29: 194,
    12.45: 192,
    12.62: 190,
    12.79: 188,
    12.96: 186,
    13.13: 184,
    13.3: 182,
    13.48: 180,
    13.66: 178,
    13.84: 176,
    14.02: 174,
    14.2: 172,
    14.39: 170,
    14.48: 169,
    14.57: 168,
    14.67: 167,
    14.76: 166,
    14.86: 165,
    14.96: 164,
    15.05: 163,
    15.15: 162,
    15.25: 161,
    15.34: 160,
    15.44: 159,
    15.54: 158,
    15.64: 157,
    15.74: 156,
    15.84: 155,
    15.94: 154,
    16.04: 153,
    16.14: 152,
    16.24: 151,
    16.34: 150,
    16.45: 149,
    16.55: 148,
    16.65: 147,
    16.76: 146,
    16.86: 145,
    16.96: 144,
    17.07: 143,
    17.18: 142,
    17.28: 141,
    17.39: 140,
    17.5: 139,
    17.6: 138,
    17.71: 137,
    17.82: 136,
    17.93: 135,
    18.04: 134,
    18.15: 133,
    18.26: 132,
    18.37: 131,
    18.49: 130,
    18.6: 129,
    18.72: 128,
    18.83: 127,
    18.95: 126,
    19.06: 125,
    19.18: 124,
    19.3: 123,
    19.42: 122,
    19.54: 121,
    19.66: 120,
    19.78: 119,
    19.91: 118,
    20.04: 117,
    20.16: 116,
    20.29: 115,
    20.42: 114,
    20.55: 113,
    20.69: 112,
    20.82: 111,
    20.96: 110,
    21.1: 109,
    21.24: 108,
    21.39: 107,
    21.54: 106,
    21.69: 105,
    21.84: 104,
    22.0: 103,
    22.16: 102,
    22.32: 101,
    22.49: 100,
    22.66: 99,
    22.83: 98,
    23.01: 97,
    23.2: 96,
    23.38: 95,
    23.58: 94,
    23.78: 93,
    23.99: 92,
    24.2: 91,
    24.42: 90,
    24.64: 89,
    24.88: 88,
    25.12: 87,
    25.37: 86,
    25.63: 85,
    25.9: 84,
    26.18: 83,
    26.47: 82,
    26.77: 81,
    27.09: 80,
    27.42: 79,
    27.76: 78,
    28.11: 77,
    28.49: 76,
    28.87: 75,
    29.28: 74,
    29.7: 73,
    30.15: 72,
    30.62: 71,
    31.11: 70,
    31.62: 69,
    32.16: 68,
    32.72: 67,
    33.32: 66,
    33.95: 65,
    34.61: 64,
    35.3: 63,
    36.04: 62,
    36.81: 61,
    37.63: 60,
    38.5: 59,
    39.42: 58,
    40.39: 57,
    41.42: 56,
    42.51: 55,
    43.67: 54,
    44.91: 53,
    46.22: 52,
    47.62: 51,
    49.11: 50,
    50.7: 49,
    52.41: 48,
    54.23: 47,
    56.18: 46,
    58.27: 45,
    60.52: 44,
    62.93: 43,
    65.54: 42,
    68.35: 41,
    71.39: 40,
    74.67: 39,
    78.24: 38,
    82.11: 37,
    86.33: 36,
    90.93: 35,
    95.97: 34,
    101.49: 33,
    107.56: 32,
    114.25: 31,
  };

  final Map<double, double> deflectionMap = {
    9.7: 310,
    9.7: 308, // Note: Duplicate key, will use last value (300)
    9.71: 306,
    9.71: 304,
    9.71: 302,
    9.72: 300,
    9.72: 298,
    9.73: 296,
    9.73: 294,
    9.73: 292,
    9.74: 290,
    9.74: 288,
    9.75: 286,
    9.75: 284,
    9.76: 282,
    9.76: 280,
    9.77: 278,
    9.77: 276,
    9.78: 274,
    9.78: 272,
    9.79: 270,
    9.79: 268,
    9.8: 266,
    9.81: 264,
    9.81: 262,
    9.82: 260,
    9.83: 258,
    9.83: 256,
    9.84: 254,
    9.85: 252,
    9.86: 250,
    9.86: 248,
    9.87: 246,
    9.88: 244,
    9.89: 242,
    9.9: 240,
    9.91: 238,
    9.92: 236,
    9.93: 234,
    9.94: 232,
    9.95: 230,
    9.96: 228,
    9.97: 226,
    9.98: 224,
    9.99: 222,
    10.01: 220,
    10.02: 218,
    10.03: 216,
    10.05: 214,
    10.06: 212,
    10.08: 210,
    10.09: 208,
    10.11: 206,
    10.13: 204,
    10.15: 202,
    10.17: 200,
    10.19: 198,
    10.21: 196,
    10.23: 194,
    10.25: 192,
    10.27: 190,
    10.3: 188,
    10.32: 186,
    10.35: 184,
    10.37: 182,
    10.4: 180,
    10.43: 178,
    10.46: 176,
    10.5: 174,
    10.53: 172,
    10.57: 170,
    10.59: 169,
    10.6: 168,
    10.62: 167,
    10.64: 166,
    10.66: 165,
    10.69: 164,
    10.71: 163,
    10.73: 162,
    10.75: 161,
    10.78: 160,
    10.8: 159,
    10.82: 158,
    10.85: 157,
    10.87: 156,
    10.9: 155,
    10.93: 154,
    10.96: 153,
    10.98: 152,
    11.01: 151,
    11.04: 150,
    11.07: 149,
    11.11: 148,
    11.14: 147,
    11.17: 146,
    11.21: 145,
    11.24: 144,
    11.28: 143,
    11.31: 142,
    11.35: 141,
    11.39: 140,
    11.43: 139,
    11.48: 138,
    11.52: 137,
    11.56: 136,
    11.61: 135,
    11.66: 134,
    11.71: 133,
    11.76: 132,
    11.81: 131,
    11.86: 130,
    11.92: 129,
    11.97: 128,
    12.03: 127,
    12.09: 126,
    12.15: 125,
    12.22: 124,
    12.28: 123,
    12.35: 122,
    12.42: 121,
    12.5: 120,
    12.57: 119,
    12.65: 118,
    12.73: 117,
    12.82: 116,
    12.91: 115,
    13.0: 114,
    13.09: 113,
    13.19: 112,
    13.29: 111,
    13.39: 110,
    13.5: 109,
    13.61: 108,
    13.73: 107,
    13.85: 106,
    13.98: 105,
    14.11: 104,
    14.24: 103,
    14.38: 102,
    14.53: 101,
    14.68: 100,
    14.84: 99,
    15.01: 98,
    15.18: 97,
    15.36: 96,
    15.55: 95,
    15.75: 94,
    15.95: 93,
    16.17: 92,
    16.39: 91,
    16.62: 90,
    16.87: 89,
    17.12: 88,
    17.39: 87,
    17.67: 86,
    17.97: 85,
    18.28: 84,
    18.6: 83,
    18.94: 82,
    19.3: 81,
    19.67: 80,
    20.07: 79,
    20.48: 78,
    20.92: 77,
    21.38: 76,
    21.87: 75,
    22.38: 74,
    22.93: 73,
    23.5: 72,
    24.11: 71,
    24.75: 70,
    25.43: 69,
    26.16: 68,
    26.92: 67,
    27.74: 66,
    28.6: 65,
    29.53: 64,
    30.51: 63,
    31.56: 62,
    32.68: 61,
    33.88: 60,
    35.16: 59,
    36.53: 58,
    38.0: 57,
    39.58: 56,
    41.28: 55,
    43.12: 54,
    45.09: 53,
    47.22: 52,
    49.53: 51,
    52.03: 50,
    54.74: 49,
    57.69: 48,
    60.9: 47,
    64.4: 46,
    68.23: 45,
    72.42: 44,
    77.02: 43,
    82.08: 42,
    87.66: 41,
    93.82: 40,
    100.65: 39,
    108.24: 38,
    116.7: 37,
    126.15: 36,
    136.74: 35,
    148.66: 34,
    162.12: 33,
    177.37: 32,
    194.72: 31,
  };

  double? getDt(String keyType, double keyValue) {
    Map<double, double> dataMap =
        keyType == "bending stress" ? bendingStressMap : deflectionMap;

    if (dataMap.containsKey(keyValue)) {
      return dataMap[keyValue];
    } else {
      // Find the closest keys
      List<double> sortedKeys = dataMap.keys.toList()..sort();
      double lowerKey = sortedKeys.lastWhere(
        (k) => k < keyValue,
        orElse: () => sortedKeys.first,
      );
      double upperKey = sortedKeys.firstWhere(
        (k) => k > keyValue,
        orElse: () => sortedKeys.last,
      );

      // Check if the value is midway
      if ((keyValue - lowerKey) == (upperKey - keyValue)) {
        // Interpolate
        double lowerValue = dataMap[lowerKey]!;
        double upperValue = dataMap[upperKey]!;
        return (lowerValue + upperValue) / 2;
      } else if ((keyValue - lowerKey) < (upperKey - keyValue)) {
        // Closer to lower key
        return dataMap[lowerKey];
      } else {
        // Closer to upper key
        return dataMap[upperKey];
      }
    }
  }
}
